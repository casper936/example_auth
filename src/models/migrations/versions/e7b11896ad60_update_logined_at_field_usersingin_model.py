"""update logined_at field UserSingIn model

Revision ID: e7b11896ad60
Revises: 63e5be69baaa
Create Date: 2024-03-31 19:53:05.768820

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e7b11896ad60'
down_revision: Union[str, None] = '63e5be69baaa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('uq__companies__id'), 'companies', ['id'], schema='catalog')
    op.create_unique_constraint(op.f('uq__company_branch__id'), 'company_branch', ['id'], schema='catalog')
    op.create_unique_constraint(op.f('uq__company_types__id'), 'company_types', ['id'], schema='catalog')
    op.create_unique_constraint(op.f('uq__profiles__id'), 'profiles', ['id'], schema='catalog')
    op.create_unique_constraint(op.f('uq__user_social_account__id'), 'user_social_account', ['id'], schema='catalog')
    op.create_unique_constraint(op.f('uq__users__id'), 'users', ['id'], schema='catalog')
    op.alter_column('users_sign_in', 'logined_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False,
               schema='catalog')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users_sign_in', 'logined_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               schema='catalog')
    op.drop_constraint(op.f('uq__users__id'), 'users', schema='catalog', type_='unique')
    op.drop_constraint(op.f('uq__user_social_account__id'), 'user_social_account', schema='catalog', type_='unique')
    op.drop_constraint(op.f('uq__profiles__id'), 'profiles', schema='catalog', type_='unique')
    op.drop_constraint(op.f('uq__company_types__id'), 'company_types', schema='catalog', type_='unique')
    op.drop_constraint(op.f('uq__company_branch__id'), 'company_branch', schema='catalog', type_='unique')
    op.drop_constraint(op.f('uq__companies__id'), 'companies', schema='catalog', type_='unique')
    # ### end Alembic commands ###
